# README - Processament de Text i Models de Machine Learning

Aquest projecte implementa un pipeline complet per a l'anàlisi de text utilitzant models de Machine Learning. El codi inclou funcionalitats per carregar dades, preprocessar text, vectoritzar-lo, entrenar models i avaluar-los.

---

## 1. Dependències
Abans d'executar el codi, assegura't d'instal·lar les llibreries necessàries:
```bash
pip install pandas scikit-learn nltk
```

---

## 2. Fitxer d'entrada
El codi assumeix que el dataset original es troba al fitxer:
```
C:\Users\mcasesf\Documents\ModelML\training.1600000.processed.noemoticon.csv
```
El dataset ha de contenir sis columnes, on la primera (‘target’) representa l'etiqueta i la sisena (‘text’) el text.

---

## 3. Descripció de les funcions

### carregar_dades()
- Carrega el dataset des d'un fitxer CSV.
- Selecciona les columnes rellevants (‘target’ i ‘text’).
- Preprocessa el text:
  - Elimina enllaços, mencions, hashtags, puntuació i números.
  - Converteix el text a minúscules.
  - Aplica lematització.
- Divideix les dades en entrenament i validació.

### vectoritzar_dades(X_train, X_val)
- Aplica la transformació TF-IDF al text:
  - Utilitza fins a 100.000 característiques.
  - Considera n-grams de longitud 1 a 4.
  - Exclou termes molt rars o molt comuns.

### executar_model(model, X_train_tfidf, X_val_tfidf, y_train, y_val)
- Entrena el model especificat amb les dades vectoritzades.
- Prediu les etiquetes per al conjunt de validació.
- Calcula i mostra:
  - Exactitud del model.
  - Informe de classificació (precisió, record, F1-score).

### main()
- Permet a l'usuari seleccionar i executar models entre:
  1. Regressió Logística
  2. Naive Bayes
  3. Random Forest
  4. SVM
  5. Sortir

---

## 4. Models de Machine Learning

| Model                    | Descripció                                        |
|--------------------------|----------------------------------------------------|
| **Regressió Logística**  | Model lineal robust per a classificació.         |
| **Naive Bayes**          | Simple i eficient per a dades text.               |
| **Random Forest**        | Bosc aleatori d'arbres de decisió.                |
| **SVM**                  | Classificador amb kernel lineal.                  |

---

## 5. Com executar

1. Executa el fitxer Python:
```bash
python <nom_del_fitxer>.py
```
2. Segueix les instruccions del terminal per seleccionar el model.
3. Els resultats d'exactitud i informe de classificació es mostraran al terminal.

---

## 6. Notes
- Assegura't que el dataset estigui en el format correcte i que el fitxer existeixi a la ubicació especificada.
- Per millorar el rendiment dels models, pots ajustar els hiperparàmetres com `ngram_range`, `max_features`, o `n_estimators`.

---

## 7. Exemple de sortida

```
Selecciona un model de Machine Learning:
1. Regressió Logística
2. Naive Bayes
3. Random Forest
4. SVM
5. Sortir
Introdueix el número de la teva opció: 1
Entrenant el model LogisticRegression...
Predint...
Avaluant el model...
Exactitud del model: 85.23%
Informe de classificació:
              precision    recall  f1-score   support

           0       0.86      0.84      0.85      2000
           1       0.85      0.87      0.86      2000

    accuracy                           0.85      4000
   macro avg       0.85      0.85      0.85      4000
weighted avg       0.85      0.85      0.85      4000
```

---
